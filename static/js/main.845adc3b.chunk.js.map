{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWIthForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","Applogo","alt","api","baseUrl","headers","this","_baseUrl","_headers","Promise","all","getUserInfo","getInitialCards","res","ok","json","reject","status","fetch","then","_handleResponse","data","method","body","JSON","stringify","name","about","avatar","item","title","link","url","id","authorization","Card","props","card","onClick","onCardClick","type","aria-label","likes","length","Main","React","useState","userInfo","setUserInfo","cards","setCards","useEffect","getInfoFromServer","userData","initialCards","style","backgroundImage","onEditAvatar","onEditProfile","onAddPlace","map","index","key","Footer","Date","getFullYear","PopupWithForm","isOpen","action","noValidate","onClose","children","submitTitle","ImagePopup","isClose","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","minLength","maxLength","pattern","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.845adc3b.chunk.js","sourcesContent":["import React from \"react\";\nimport Applogo from \"../images/logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={Applogo} alt=\"Логотип проекта 'Mesto'\" />\n    </header>\n  )\n}\n\nexport default Header","  class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInfoFromServer() {\n    return Promise.all([this.getUserInfo(),this.getInitialCards()])\n  }\n\n\n  // обработчик респонсов сервера\n  _handleResponse(res){\n    if (res.ok) {\n      return res.json();\n      } else {\n      return Promise.reject(`Error! : ${res.status}`)\n    }\n\n  }\n\n  // получение начальных данных от пользователя\n  getUserInfo() { // Запрос на загрузку данных пользователя\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._handleResponse)\n  }\n\n\n  // получение серверных карточек\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }\n    )\n    .then(this._handleResponse)\n  }\n\n  //установка данных профиля\n  patchUserProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`,\n      {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      })\n      .then(this._handleResponse)\n  }\n\n\n  // смена аватары\n  patchAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`,  {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar.avatar\n      })\n    })\n      .then(this._handleResponse)\n  }\n\n postUserCard(item) {\n  return fetch(`${this._baseUrl}/cards`,  {\n    method: 'POST',\n    headers: this._headers,\n    body: JSON.stringify({\n        name: item.title,\n        link: item.url\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  //  постановка лаек\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n      }\n    )\n      .then(this._handleResponse)\n  }\n\n  // снятие лаека\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n      }\n    )\n      .then(this._handleResponse)\n  }\n\n  // удалить карточку\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`,  {\n      method: 'DELETE',\n      headers: this._headers\n      }\n    )\n      .then(this._handleResponse)\n  }\n\n}\n\n\nexport const api = new Api({\n  baseUrl:'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '3cd7525a-bdb0-4a65-a82d-96b8a4b1711a',\n    'Content-Type': 'application/json'}\n});","import React from \"react\";\n\nfunction Card(props) {\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n  return(\n    <div className=\"element\">\n      <img className=\"element__photo\" src={props.card.link} onClick={handleClick} alt={props.card.link} />\n      <button className=\"element__trash\" type=\"button\" aria-label=\"Удалить\"/>\n      <div className=\"element__row\">\n        <h2 className=\"element__title\">{props.card.name}</h2>\n        <div className=\"element__like-section\">\n          <button className=\"element__like\" type=\"button\" aria-label=\"поставить 'лайк'\"/>\n          <span className=\"element__like-counter\">{props.card.likes.length > 0 ? `${props.card.likes.length}` : 0}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React from \"react\";\nimport {api} from '../utils/Api'\nimport Card from \"./Card\";\n\nfunction Main(props) {\n\n  const [userInfo, setUserInfo] = React.useState({})\n  const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n      api.getInfoFromServer().then( ([userData, initialCards]) => {\n\n        setUserInfo(userData)\n        setCards(initialCards)\n      })\n    }, [])\n\n    return(\n        <main className=\"content\">\n\n            <section className=\"profile\">\n                <div className=\"profile__image\">\n                    <div className=\"profile__avatar\" alt={''} style={{ backgroundImage: `url(${userInfo.avatar})` }}/>\n                    <button className='profile__edit-avatar' type=\"button\" aria-label=\"Редактировать аватар\" onClick={props.onEditAvatar} />\n                </div>\n\n                <div className=\"profile__info\">\n                    <div className=\"profile__row\">\n                        <h1 className=\"profile__title\">{userInfo.name}</h1>\n                        <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}/>\n                    </div>\n                    <p className=\"profile__job-description\">{userInfo.about}</p>\n                </div>\n                <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить элемент\" onClick={props.onAddPlace}/>\n            </section>\n\n            <section className=\"elements\" aria-label=\"элементы\">\n              {cards.map((item, index) => \n                <Card \n                  key={index} \n                  card={item} \n                  onCardClick={props.onCardClick} \n                />\n              )}\n            </section>\n        </main>\n    )\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyrigth\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n    </footer>\n  )  \n}\n\nexport default Footer;","import React from \"react\";\n\n\nfunction PopupWithForm(props) {\n  return(\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_active'}`} >\n      <form className=\"popup__container popup__container_type_profile\" name={`${props.name}`} method=\"GET\"\n            action=\"#\" noValidate>\n        <button className=\"popup__close\" type=\"reset\" aria-label=\"закрыть\" onClick={props.onClose}/>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {/*редактировать профиль*/}\n        {props.children}\n        <button className=\"popup__submit\" type=\"submit\">{`${props.submitTitle}`}</button>\n      </form>\n    </div>\n\n  )\n}\nexport default PopupWithForm","import React from \"react\";\n\nfunction ImagePopup({card, isClose}) {\n  return (\n    <div className={`popup popup_type_image ${card && 'popup_active'}`}>\n      <div className=\"popup__image-container\">\n        <button className=\"popup__close\" type=\"reset\" aria-label=\"Закрыть\" onClick={isClose}/>\n        <img className=\"popup__image\" \n          src={`${card.link}`}  \n          alt={card.name}/>\n        <p className=\"popup__image-title\">{card.name}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup","import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWIthForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App () {\n\n    // const container = document.querySelector('.popup__image-container')\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState('');\n\n    function handleEditAvatarClick () {\n      setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n      setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n      setIsAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setIsAddPlacePopupOpen(false);\n      setSelectedCard('')\n    }\n\n    function handleCardClick(card) {\n      setSelectedCard(card); \n    }\n\n  return (\n    <div className=\"page\">\n      <div className=\"root\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace ={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n\n        <PopupWithForm\n          title=\"Редактировать профиль\"\n          name=\"edit-profile\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          submitTitle={'Сохранить'}>\n\n          <fieldset className=\"popup__inputs\">\n            <input\n              className=\"popup__input popup__input_type_name\"\n              type=\"text\"\n              name=\"name\"\n              id=\"name-input\"\n              placeholder=\"Введите имя\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              pattern=\"[a-zA-Zа-яёА-ЯЁ\\s-]*\"\n              required \n            />\n            <span className=\"popup__error\" id=\"name-input-error\"/>\n            <input\n              className=\"popup__input popup__input_type_job\"\n              type=\"text\"\n              name=\"about\"\n              id=\"about-input\"\n              placeholder=\"Введите профессию\"\n              minLength=\"2\"\n              maxLength=\"200\"\n              required \n            />\n            <span className=\"popup__error\" id=\"about-input-error\"/>\n          </fieldset>\n        </PopupWithForm>\n\n        <PopupWithForm\n          title=\"Новое место\"\n          name=\"new-place\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          submitTitle={'Создать'} >\n\n          <fieldset className=\"popup__inputs\">\n            <input\n              className=\"popup__input popup__input_type_title\"\n              type=\"text\"\n              name=\"title\"\n              id=\"title-input\"\n              placeholder=\"Название\"\n              minLength=\"1\"\n              maxLength=\"30\"\n              required \n            />\n            <span className=\"popup__error\" id=\"title-input-error\" />\n            <input\n              className=\"popup__input popup__input_type_url\"\n              type=\"url\"\n              name=\"url\"\n              id=\"url-input\"\n              placeholder=\"Ссылка на картинку\"\n              required \n            />\n            <span className=\"popup__error\" id=\"url-input-error\"/>\n          </fieldset>\n        </PopupWithForm>\n\n        <PopupWithForm\n          title=\"Обновить аватар\"\n          name=\"avatar\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          submitTitle=\"Сохранить\">\n\n          <fieldset className=\"popup__inputs\">\n            <input\n              className=\"popup__input popup__input_type_url\"\n              type=\"url\"\n              name=\"avatar\"\n              id=\"url-input-avatar\"\n              placeholder=\"Ссылка на аватар\"\n              required \n            />\n            <span className=\"popup__error\" id=\"url-input-avatar-error\" />\n          </fieldset>\n        </PopupWithForm>\n\n        <PopupWithForm\n          title=\"Вы уверены?\"\n          name=\"confirm\"\n          submitTitle=\"Да\"\n        />\n        <ImagePopup\n          card={selectedCard}\n          isClose={closeAllPopups}\n          \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}